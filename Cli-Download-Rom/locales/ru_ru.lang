# === Общие и Настройка ===
APP_DESCRIPTION = "Инструмент командной строки для поиска и загрузки ROM'ов с использованием базы данных CrocDB."
LOGGING_SYSTEM_SETUP = "Система логирования настроена."
DIR_STRUCTURE_CHECK = "⌁ Проверка структуры директорий..."
DIR_CREATED = "  → Создание директории: {}"
DIR_STRUCTURE_SUCCESS = "✔️ Проверка структуры директорий успешно завершена."

# === CLI и Интерактивная Оболочка ===
COMMANDS_HELP = "Доступные команды"
INTERACTIVE_SHELL_WELCOME = "Добро пожаловать в интерактивную оболочку. Введите 'help' для списка команд или 'exit' для выхода."
INTERACTIVE_SHELL_EXIT = "Выход из оболочки. До свидания!"
SEARCH_START = "🔎  Начинаю поиск по запросу '{}', используя источник '{}'..."
DOWNLOAD_LIST_START = "📚 Начинаю загрузку из списка '{}'..."
PROMPT_SELECT_ROM = "Введите номер ROM для загрузки (или нажмите Enter для отмены)"
ROM_SELECTED_FOR_DOWNLOAD = "ROM '{}' выбран для загрузки."
LIST_PROCESSING_ROM = "Обработка '{}'..."

# === Обработчик API ===
API_SEARCH_ATTEMPT = "Попытка поиска по запросу '{}' через API: {}"
API_SEARCH_NO_RESULTS = "Результатов по запросу '{}' в API не найдено."
API_SEARCH_SUCCESS = "Поиск через API успешен: {} результатов для '{}'."
API_DETAILS_ATTEMPT = "Попытка получить детали для rom_id '{}' из API: {}"
API_DETAILS_SUCCESS = "Детали для ROM '{}' успешно получены."
FALLBACK_TO_API = "Локально не найдено. Обращаюсь к API для ROM id: {}"

# === Обработчик Локальной БД ===
LOCAL_DB_DIR_NOT_FOUND = "Директория локальной базы данных не найдена по пути: {}"
LOCAL_DB_NO_FILES = "В директории базы данных не найдено файлов .json: {}"
LOCAL_DB_SEARCH_START = "Начинаю локальный поиск по запросу '{}' (это может занять некоторое время)..."
LOCAL_DB_FILE_PROCESSING = "Обработка файла базы данных: {}"
LOCAL_DB_SEARCH_COMPLETE = "Локальный поиск завершен: {} результатов для '{}'."
LOCAL_DB_DETAILS_ATTEMPT = "Получение деталей для rom_id '{}' из локальной базы данных."
LOCAL_DB_DETAILS_SUCCESS = "Детали для ROM '{}' найдены в локальной базе данных."

# === Обработка Файла Списка ===
PROCESSING_LIST_FILE = "Обработка файла списка: {}"
LIST_FILE_NOT_FOUND = "Файл списка не найден: {}"
LIST_FILE_INVALID = "Неверный или поврежденный файл списка: {}"
LIST_PROCESSING_COMPLETE = "Обработка списка завершена. {} из {} ROM'ов найдены и готовы к загрузке."

# === Тестировщик Зеркал ===
MIRROR_TEST_STARTING = "Начинаю тест скорости зеркал..."
MIRROR_TEST_NO_LINKS = "Не предоставлено ссылок для теста зеркал."
MIRROR_TEST_DOWNLOADING = "  - Тестирование загрузки с {}..."
MIRROR_TEST_PROGRESS_DESC = "Тест {}"
MIRROR_TEST_HOST_SUCCESS = "Тест хоста '{}' завершен за {} со скоростью {}."
MIRROR_TEST_HOST_FAILED = "Ошибка теста хоста '{}': {}"
MIRROR_TEST_ALL_FAILED = "Все тестовые зеркала не ответили. Используется зеркало по умолчанию."
MIRROR_TEST_CONCLUSION = "Тест завершен. Самое быстрое зеркало - '{}' со скоростью {}."

# === Менеджер Загрузок ===
DOWNLOAD_ALREADY_EXISTS = "ROM '{}' уже существует в папке назначения и проверен. Пропускаю."
DOWNLOAD_ATTEMPTING = "Загрузка '{}' с зеркала: {}"
DOWNLOAD_PROGRESS_DESC = "Загрузка {}"
DOWNLOAD_SUCCESS = "ROM '{}' успешно загружен."
MOVE_STARTING = "Перемещение '{}' в конечную директорию..."
MOVE_SUCCESS = "Успешно перемещено в: {}"

# === Проверка Обновлений ===
UPDATE_CHECKING_TOOL = "Проверка обновлений инструмента..."
UPDATE_TOOL_AVAILABLE = "Доступна новая версия инструмента! Рекомендуется выполнить 'git pull' для обновления."
UPDATE_CHECKING_CROCDB = "Проверка обновлений базы данных CrocDB..."
UPDATE_CROCDB_SUCCESS = "База данных '{}' была обновлена новой информацией."

# === Финальные Отчеты ===
FINAL_REPORT_SUCCESS = "Успешно завершено: {}"
FINAL_REPORT_FAILURE = "Сбоев: {} (проверьте error.log для деталей)"
FINAL_REPORT_LOGS = "Логи сохранены в: {}"
FINAL_REPORT_SINGLE_DOWNLOAD = "Операция одиночной загрузки завершена."

# === Ошибки и Действия ===
ACTION_CANCELLED = "Действие отменено."
ERROR_INVALID_SELECTION = "Неверный выбор. Пожалуйста, выберите номер из списка."
ERROR_INVALID_NUMBER = "Неверный ввод. Пожалуйста, введите число."
ERROR_INVALID_CHOICE = "Неверная опция."
SEARCH_FAILED = "Поиск не удался. Проверьте логи для получения дополнительной информации."
SEARCH_NO_RESULTS_FOUND = "По запросу '{}' ничего не найдено."
ROM_NOT_FOUND_ANYWHERE = "ОШИБКА: ROM с id '{}' не найден ни локально, ни в API."
API_HTTP_ERROR = "Ошибка HTTP при доступе к URL '{}'. Код состояния: {}"
API_REQUEST_ERROR = "Ошибка соединения при доступе к URL '{}'. Детали: {}"
API_UNEXPECTED_ERROR = "Непредвиденная ошибка в функции '{}': {}"
LOCAL_DB_FILE_ERROR = "Ошибка чтения или обработки файла базы данных '{}': {}"
LOCAL_DB_ROM_NOT_FOUND = "ROM с id '{}' не найден в локальной базе данных."
DOWNLOAD_SIZE_MISMATCH = "Ошибка проверки для '{}'. Ожидаемый размер: {}, загруженный: {}."
DOWNLOAD_HOST_ERROR = "Ошибка соединения с хостом '{}': {}"
DOWNLOAD_ALL_MIRRORS_FAILED = "Не удалось загрузить '{}' после всех попыток со всех зеркал."
ERROR_INSUFFICIENT_SPACE = "Недостаточно места на диске. Требуется: {}, Доступно: {}"
PROMPT_INSUFFICIENT_SPACE = "Освободите место и нажмите (R) для повторной попытки или (C) для отмены загрузки этого ROM'а: "
SUCCESS_SPACE_FREED = "Обнаружено достаточно места. Возобновление..."
DOWNLOAD_CANCELLED_BY_USER_NO_SPACE = "Загрузка '{}' отменена пользователем из-за нехватки места."
RECHECKING_SPACE = "Повторная проверка свободного места..."
UNHANDLED_EXCEPTION = "Обнаружено необработанное исключение!"