# === Geral & Setup ===
APP_DESCRIPTION = "Ferramenta de linha de comando para baixar ROMs via API CrocDB."
LOGGING_SYSTEM_SETUP = "Sistema de logs configurado."
DIR_STRUCTURE_CHECK = "⌁ Verificando estrutura de diretórios..."
DIR_CREATED = "  → Criando diretório: {}"
DIR_STRUCTURE_SUCCESS = "✔️ Estrutura de diretórios verificada com sucesso."

# === CLI & Shell Interativo ===
COMMANDS_HELP = "Comandos disponíveis"
INTERACTIVE_SHELL_WELCOME = "Bem-vindo ao Shell Interativo. Digite 'help' para uma lista de comandos ou 'exit' para sair."
INTERACTIVE_SHELL_EXIT = "Saindo do shell. Até logo!"
SEARCH_START = "🔎  Iniciando busca por '{}'..."
DOWNLOAD_LIST_START = "📚 Iniciando download da lista '{}'..."
PROMPT_SELECT_ROM = "Digite o número da ROM para baixar (ou pressione Enter para cancelar)"
ROM_SELECTED_FOR_DOWNLOAD = "ROM '{}' selecionada para download."
LIST_PROCESSING_ROM = "Processando '{}'..."
LIST_SELECT_PROMPT = "Por favor, selecione uma lista para baixar:"
LIST_NO_FILES_FOUND = "Nenhum arquivo de lista (.json) encontrado no diretório 'list/'."
LIST_CONFIRM_DOWNLOAD_TEXT = "Esta lista contém {} ROMs. Deseja iniciar o download?"
LIST_CONFIRM_DOWNLOAD_PROMPT = "(S/N):"
LIST_DOWNLOAD_ABORTED = "Download cancelado pelo usuário."
DOWNLOAD_DESTINATION_PROMPT = "Como você deseja salvar os ficheiros?"
DOWNLOAD_DESTINATION_OPTION_1 = "(1) Padrão (separado por plataforma em ROMs/)"
DOWNLOAD_DESTINATION_OPTION_2 = "(2) Em uma pasta única com o nome da lista (ROMs/{}/)"
HELP_SEARCH = "Busca por ROMs. Uso: search <termo> [-p plataforma] [-r regiao] [--slug slug] [--rom_id id]"
HELP_DOWNLOAD = "Baixa uma ROM diretamente pelo seu identificador. Uso: download --slug <slug> | --rom_id <id> [flags]"
HELP_DOWNLOAD_LIST = "Inicia o download de uma lista de ROMs. Se nenhum ficheiro for especificado, um menu interativo aparecerá. Uso: download-list [caminho_do_ficheiro]"
HELP_EXIT = "Sai do shell interativo."

# === Handler da API ===
API_SEARCH_ATTEMPT = "Tentando buscar por '{}' na API: {}"
API_SEARCH_NO_RESULTS = "Nenhum resultado encontrado na API para '{}'."
API_SEARCH_SUCCESS = "Busca na API bem-sucedida: {} resultados para '{}'."
API_DETAILS_ATTEMPT = "Tentando obter detalhes do identificador '{}' da API: {}"
API_DETAILS_SUCCESS = "Detalhes da ROM '{}' obtidos com sucesso."

# === Testador de Mirror ===
MIRROR_TEST_STARTING = "Iniciando teste de velocidade dos mirrors..."
MIRROR_TEST_NO_LINKS = "Nenhum link fornecido para o teste de mirror."
MIRROR_TEST_DOWNLOADING = "  - Testando download de {}..."
MIRROR_TEST_PROGRESS_DESC = "Teste {}"
MIRROR_TEST_HOST_SUCCESS = "Teste do host '{}' concluído em {} com velocidade de {}."
MIRROR_TEST_HOST_FAILED = "Falha no teste do host '{}': {}"
MIRROR_TEST_ALL_FAILED = "Todos os mirrors de teste falharam. Usando o mirror padrão."
MIRROR_TEST_CONCLUSION = "Teste concluído. O mirror mais rápido é '{}' com {}."

# === Gerenciador de Download ===
DOWNLOAD_ALREADY_EXISTS = "A ROM '{}' já existe e está validada. Pulando."
DOWNLOAD_ATTEMPTING = "Baixando '{}' do mirror: {}"
DOWNLOAD_PROGRESS_DESC = "Baixando {}"
DOWNLOAD_SUCCESS = "Download da ROM '{}' bem-sucedido."
MOVE_STARTING = "Movendo '{}' para o diretório final..."
MOVE_SUCCESS = "Movido com sucesso para: {}"

# === Verificador de Atualização ===
UPDATE_CHECKING_TOOL = "Verificando atualizações da ferramenta..."
UPDATE_TOOL_AVAILABLE = "Uma nova versão da ferramenta está disponível! Recomenda-se executar 'git pull' para atualizar."

# === Relatórios Finais ===
FINAL_REPORT_SUCCESS = "Concluídos com sucesso: {}"
FINAL_REPORT_FAILURE = "Falhas: {} (verifique error.log para detalhes)"
FINAL_REPORT_LOGS = "Logs salvos em: {}"

# === Erros & Ações ===
ACTION_CANCELLED = "Ação cancelada."
ERROR_INVALID_SELECTION = "Seleção inválida. Por favor, escolha um número da lista."
ERROR_INVALID_NUMBER = "Entrada inválida. Por favor, digite um número."
ERROR_INVALID_CHOICE = "Opção inválida."
SEARCH_NO_RESULTS_FOUND = "Nenhum resultado encontrado para '{}'."
ROM_NOT_FOUND_ANYWHERE = "ERRO: A ROM com o identificador '{}' não foi encontrada na API."
API_REQUEST_ERROR = "Erro de conexão ao acessar a URL '{}'. Detalhes: {}"
API_UNEXPECTED_ERROR = "Erro inesperado na função '{}': {}"
DOWNLOAD_INCOMPLETE = "Erro de validação para '{}'. O download parece incompleto."
DOWNLOAD_CORRUPT_ZIP = "Erro de validação para '{}'. O ficheiro ZIP parece estar corrompido. Detalhes: {}"
DOWNLOAD_ALL_MIRRORS_FAILED = "Falha no download de '{}' após tentar todos os mirrors disponíveis."
ERROR_GIT_NOT_FOUND = "Git não foi encontrado no seu sistema."
ERROR_GIT_NOT_FOUND_INSTRUCTIONS = "Por favor, instale o Git e garanta que ele esteja no PATH do sistema para continuar."
ERROR_ARIA2C_NOT_FOUND = "aria2c não foi encontrado no seu sistema."
ARIA2C_AUTOINSTALL_START = "aria2c não encontrado. Tentando baixar e instalar localmente..."
ARIA2C_AUTOINSTALL_SUCCESS = "aria2c instalado com sucesso na pasta local 'bin'."
ARIA2C_AUTOINSTALL_FAILED = "Falha ao instalar o aria2c automaticamente. Instale-o manualmente e adicione ao PATH."
ERROR_ARIA2C_LINUX_INSTRUCTIONS = "Por favor, instale-o usando o gestor de pacotes da sua distribuição (ex: sudo apt-get install aria2)."
ERROR_ARIA2C_MACOS_INSTRUCTIONS = "Por favor, instale-o usando o Homebrew (brew install aria2)."
UNHANDLED_EXCEPTION = "Exceção não tratada capturada!"
UNSUPPORTED_OS_FOR_ARIA2C_INSTALL = "Sistema operativo '{}' não suportado para instalação automática do aria2c."
UPDATE_TOOL_NOT_A_GIT_REPO = "O diretório da ferramenta não é um repositório Git. Pulando verificação de update."
LOG_UPDATE_TOOL_AVAILABLE = "Nova versão da ferramenta disponível."
LOG_TOOL_UP_TO_DATE = "A ferramenta já está na versão mais recente."
LOG_ARIA2C_SHUTDOWN_RPC = "Servidor aria2c desligado via RPC."
LOG_ARIA2C_SHUTDOWN_FORCED = "Processo aria2c terminado forçosamente."
ERROR_ARIA2C_EXECUTABLE_NOT_FOUND = "Executável aria2c não pôde ser encontrado."
LOG_ARIA2C_CONNECTION_EXISTING = "Conectado a uma instância existente do aria2c."
LOG_ARIA2C_STARTING_NEW = "Nenhuma instância do aria2c encontrada. Iniciando um novo processo..."
LOG_ARIA2C_PROCESS_STARTED = "Processo aria2c iniciado com PID: {}"
ERROR_DOWNLOAD_INCOMPLETE_SIZE = "Download incompleto: tamanho do ficheiro não corresponde."
ERROR_DOWNLOAD_REQUESTS = "Erro de download com requests: {}"
ERROR_DOWNLOAD_ARIA2C = "Erro no download com aria2c para '{}': {}"
ERROR_DOWNLOAD_ARIA2C_INIT = "Falha ao gerir download com aria2c para '{}'. Erro: {}"
LOG_DOWNLOAD_MOVED_SUCCESS = "'{}' ({}) baixada, validada e movida com sucesso de '{}'."
LOG_BOXART_DOWNLOAD_SUCCESS = "Boxart para '{}' baixada com sucesso."
LOG_BOXART_DOWNLOAD_FAILED = "Não foi possível baixar a boxart para '{}': {}"

# Erros do ponto de entrada principal
ERROR_CRITICAL_FAILURE = "Ocorreu um erro crítico. Verifique 'crash.log' para detalhes."
LOG_UNHANDLED_CRITICAL_ERROR = "Ocorreu um erro crítico e não tratado no fluxo principal da aplicação."

# Novas mensagens para o crocdb_api_handler
error_request_timeout = "Erro: A requisição para a API demorou muito para responder. Verifique a sua conexão com a internet."
error_connection_error = "Erro: Não foi possível conectar-se à API. Verifique a sua conexão com a internet ou se o serviço está online."
error_http_error = "Erro: A API retornou um erro inesperado (Código: {status_code})."
error_unexpected_request_error = "Erro: Ocorreu um problema inesperado ao tentar comunicar com a API."

# Novas mensagens de log (não precisam de tradução para outros idiomas se forem apenas para debug)
log_making_request = "A fazer requisição {method} para: {url}"
log_request_payload = "Payload da requisição: {data}"
log_request_successful = "Requisição para {url} bem-sucedida."
log_request_timeout = "Timeout na requisição para: {url}"
log_connection_error = "Erro de conexão ao tentar aceder: {url}"
log_http_error = "Erro HTTP {status_code} ao aceder: {url}"
log_unexpected_error = "Erro inesperado na requisição para {url}: {error}"