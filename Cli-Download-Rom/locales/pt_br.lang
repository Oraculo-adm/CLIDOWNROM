# === Geral & Setup ===
APP_DESCRIPTION = "Ferramenta de linha de comando para download de ROMs via CrocDB."
LOGGING_SYSTEM_SETUP = "Sistema de logging configurado."
DIR_STRUCTURE_CHECK = "⌁ Verificando estrutura de diretórios..."
DIR_CREATED = "  → Criando diretório: {}"
DIR_STRUCTURE_SUCCESS = "✔️ Estrutura de diretórios verificada com sucesso."

# === CLI & Shell Interativo ===
COMMANDS_HELP = "Comandos disponíveis"
INTERACTIVE_SHELL_WELCOME = "Bem-vindo ao Shell Interativo. Digite 'help' para uma lista de comandos ou 'exit' para sair."
INTERACTIVE_SHELL_EXIT = "Saindo do shell. Até logo!"
SEARCH_START = "🔎  Iniciando busca por '{}' usando a fonte '{}'..."
DOWNLOAD_LIST_START = "📚 Iniciando download da lista em '{}'..."
PROMPT_SELECT_ROM = "Digite o número da ROM para baixar (ou pressione Enter para cancelar)"
ROM_SELECTED_FOR_DOWNLOAD = "ROM '{}' selecionada para download."
LIST_PROCESSING_ROM = "Processando '{}'..."

# === Handler da API ===
API_SEARCH_ATTEMPT = "Tentando buscar por '{}' na API: {}"
API_SEARCH_NO_RESULTS = "Nenhum resultado encontrado na API para '{}'."
API_SEARCH_SUCCESS = "Busca na API bem-sucedida: {} resultados para '{}'."
API_DETAILS_ATTEMPT = "Tentando obter detalhes do rom_id '{}' da API: {}"
API_DETAILS_SUCCESS = "Detalhes da ROM '{}' obtidos com sucesso."
FALLBACK_TO_API = "Não encontrada localmente. Recorrendo à API para a ROM id: {}"

# === Handler do DB Local ===
LOCAL_DB_DIR_NOT_FOUND = "Diretório do banco de dados local não encontrado em: {}"
LOCAL_DB_NO_FILES = "Nenhum arquivo .json encontrado no diretório do banco de dados: {}"
LOCAL_DB_SEARCH_START = "Iniciando busca local por '{}' (isso pode demorar)..."
LOCAL_DB_FILE_PROCESSING = "Processando arquivo de banco de dados: {}"
LOCAL_DB_SEARCH_COMPLETE = "Busca local concluída: {} resultados para '{}'."
LOCAL_DB_DETAILS_ATTEMPT = "Buscando detalhes para o rom_id '{}' no banco de dados local."
LOCAL_DB_DETAILS_SUCCESS = "Detalhes da ROM '{}' encontrados no banco de dados local."
DB_UPDATE_STARTING = "Iniciando a construção/atualização do banco de dados local. Isso pode levar MUITO tempo..."
DB_UPDATE_WORKFLOW_NOT_FOUND = "ERRO: Script 'workflow.py' não encontrado em {}."
DB_UPDATE_SUCCESS = "Banco de dados local construído/atualizado com sucesso!"
DB_UPDATE_FAILED = "A atualização do banco de dados local falhou. Verifique os logs para detalhes."
LOCAL_DB_SQLITE_NOT_FOUND = "Arquivo de banco de dados SQLite não encontrado em: {}"
LOCAL_DB_SQLITE_NOT_FOUND_USER_MSG = "Banco de dados local não encontrado. Execute o comando 'update-db' primeiro."

# === Processamento de Arquivo de Lista ===
PROCESSING_LIST_FILE = "Processando arquivo de lista: {}"
LIST_FILE_NOT_FOUND = "Arquivo de lista não encontrado: {}"
LIST_FILE_INVALID = "Arquivo de lista inválido ou mal formatado: {}"
LIST_PROCESSING_COMPLETE = "Processamento da lista concluído. {} de {} ROMs encontradas e prontas para download."

# === Testador de Mirror ===
MIRROR_TEST_STARTING = "Iniciando teste de velocidade dos mirrors..."
MIRROR_TEST_NO_LINKS = "Nenhum link fornecido para o teste de mirror."
MIRROR_TEST_DOWNLOADING = "  - Testando download de {}..."
MIRROR_TEST_PROGRESS_DESC = "Teste {}"
MIRROR_TEST_HOST_SUCCESS = "Teste do host '{}' concluído em {} com velocidade de {}."
MIRROR_TEST_HOST_FAILED = "Falha no teste do host '{}': {}"
MIRROR_TEST_ALL_FAILED = "Todos os mirrors de teste falharam. Usando o mirror padrão."
MIRROR_TEST_CONCLUSION = "Teste concluído. O mirror mais rápido é '{}' com {}."

# === Gerenciador de Download ===
DOWNLOAD_ALREADY_EXISTS = "A ROM '{}' já existe no diretório de destino e está validada. Pulando."
DOWNLOAD_ATTEMPTING = "Baixando '{}' do mirror: {}"
DOWNLOAD_PROGRESS_DESC = "Baixando {}"
DOWNLOAD_SUCCESS = "Download da ROM '{}' bem-sucedido."
MOVE_STARTING = "Movendo '{}' para o diretório final..."
MOVE_SUCCESS = "Movido com sucesso para: {}"

# === Verificador de Atualização ===
UPDATE_CHECKING_TOOL = "Verificando atualizações da ferramenta..."
UPDATE_TOOL_AVAILABLE = "Uma nova versão da ferramenta está disponível! Recomenda-se executar 'git pull' para atualizar."
UPDATE_CHECKING_CROCDB = "Verificando atualizações do banco de dados CrocDB..."
UPDATE_CROCDB_SUCCESS = "O banco de dados '{}' foi atualizado com novas informações."

# === Relatórios Finais ===
FINAL_REPORT_SUCCESS = "Concluídos com sucesso: {}"
FINAL_REPORT_FAILURE = "Falhas: {} (verifique error.log para detalhes)"
FINAL_REPORT_LOGS = "Logs salvos em: {}"
FINAL_REPORT_SINGLE_DOWNLOAD = "Operação de download único concluída."

# === Erros & Ações ===
ACTION_CANCELLED = "Ação cancelada."
ERROR_INVALID_SELECTION = "Seleção inválida. Por favor, escolha um número da lista."
ERROR_INVALID_NUMBER = "Entrada inválida. Por favor, digite um número."
ERROR_INVALID_CHOICE = "Opção inválida."
SEARCH_FAILED = "A busca falhou. Verifique os logs para mais detalhes."
SEARCH_NO_RESULTS_FOUND = "Nenhum resultado encontrado para '{}'."
ROM_NOT_FOUND_ANYWHERE = "ERRO: A ROM com id '{}' não foi encontrada localmente nem na API."
API_HTTP_ERROR = "Erro HTTP ao acessar a URL '{}'. Código de status: {}"
API_REQUEST_ERROR = "Erro de conexão ao acessar a URL '{}'. Detalhes: {}"
API_UNEXPECTED_ERROR = "Erro inesperado na função '{}': {}"
LOCAL_DB_FILE_ERROR = "Erro ao ler ou processar o arquivo de banco de dados '{}': {}"
LOCAL_DB_ROM_NOT_FOUND = "A ROM com id '{}' não foi encontrada no banco de dados local."
DOWNLOAD_SIZE_MISMATCH = "Erro de validação para '{}'. Tamanho esperado: {}, baixado: {}."
DOWNLOAD_HOST_ERROR = "Erro de conexão com o host '{}': {}"
DOWNLOAD_ALL_MIRRORS_FAILED = "Falha no download de '{}' após tentar todos os mirrors e retentativas."
ERROR_INSUFFICIENT_SPACE = "Espaço em disco insuficiente. Necessário: {}, Disponível: {}"
PROMPT_INSUFFICIENT_SPACE = "Libere espaço e pressione (R) para tentar novamente, ou (C) para cancelar o download desta ROM: "
SUCCESS_SPACE_FREED = "Espaço suficiente detectado. Retomando..."
DOWNLOAD_CANCELLED_BY_USER_NO_SPACE = "Download de '{}' cancelado pelo usuário devido à falta de espaço."
RECHECKING_SPACE = "Verificando o espaço novamente..."
UNHANDLED_EXCEPTION = "Exceção não tratada capturada!"
ERROR_ARIA2C_NOT_FOUND = "aria2c não foi encontrado no seu sistema."
ERROR_DEPS_NOT_FOUND_INSTRUCTIONS = "Por favor, instale as dependências de sistema necessárias e garanta que estejam no PATH."
ARIA2C_AUTOINSTALL_START = "aria2c não encontrado. Tentando baixar e instalar localmente..."
ARIA2C_AUTOINSTALL_SUCCESS = "aria2c instalado com sucesso na pasta local 'bin'."
ARIA2C_AUTOINSTALL_FAILED = "Falha ao instalar o aria2c automaticamente. Instale-o manualmente e adicione ao PATH."
ERROR_GIT_NOT_FOUND = "Git não foi encontrado no seu sistema."
ERROR_ARIA2C_NOT_FOUND = "aria2c não foi encontrado no seu sistema."
ERROR_DEPS_NOT_FOUND_INSTRUCTIONS = "Por favor, instale as dependências de sistema necessárias e garanta que estejam no PATH."
CLONING_REPO_NOTICE = "Configuração de primeira execução: baixando o repositório '{}'... Isso pode levar alguns minutos."
CLONING_REPO_SUCCESS = "Repositório '{}' baixado com sucesso."
CLONING_REPO_FAILED = "Falha ao baixar o repositório '{}'. Verifique sua conexão e os logs."
ARIA2C_AUTOINSTALL_START = "aria2c não encontrado. Tentando baixar e instalar localmente..."
ARIA2C_AUTOINSTALL_SUCCESS = "aria2c instalado com sucesso na pasta local 'bin'."
ARIA2C_AUTOINSTALL_FAILED = "Falha ao instalar o aria2c automaticamente. Instale-o manualmente e adicione ao PATH."
ERROR_ARIA2C_LINUX_INSTRUCTIONS = "Por favor, instale-o usando o gestor de pacotes da sua distribuição (ex: sudo apt-get install aria2)."
ERROR_ARIA2C_MACOS_INSTRUCTIONS = "Por favor, instale-o usando o Homebrew (brew install aria2)."
LIST_SELECT_PROMPT = "Por favor, selecione uma lista para baixar:"
LIST_NO_FILES_FOUND = "Nenhum arquivo de lista (.json) encontrado no diretório 'list/'."
LIST_CONFIRM_DOWNLOAD = "Esta lista contém {} ROMs. Deseja iniciar o download? (S/N):"
LIST_DOWNLOAD_ABORTED = "Download cancelado pelo usuário."
DOWNLOAD_DESTINATION_PROMPT = "Como você deseja salvar os arquivos?"
DOWNLOAD_DESTINATION_OPTION_1 = "(1) Padrão (separado por plataforma em ROMs/)"
DOWNLOAD_DESTINATION_OPTION_2 = "(2) Em uma pasta com o nome da lista (ROMs/{}/)"
HELP_SEARCH = "Busca por ROMs. Uso: search <termo> [--source api|local] [-p plataforma] [-r regiao]"
HELP_DOWNLOAD_LIST = "Inicia o download de uma lista de ROMs. Se nenhum arquivo for especificado, um menu interativo aparecerá. Uso: download_list [caminho_do_arquivo]"
HELP_UPDATE_DB = "Baixa as fontes de dados e constrói ou atualiza o banco de dados SQLite local. Pode demorar."
HELP_EXIT = "Sai do shell interativo."